version: "3.8"

services:
  backend:
    build:
      context: .
      target: production
    container_name: jobboard-backend-prod
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - MONGO_URI=mongodb://mongo:27017
      - DATABASE_NAME=jobboard
      - PORT=5000
      - JWT_SECRET=${JWT_SECRET}
      - JWT_REFRESH_SECRET=${JWT_REFRESH_SECRET}
      - JWT_EXPIRES_IN=15m
      - JWT_REFRESH_EXPIRES_IN=7d
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
      - FACEBOOK_APP_ID=${FACEBOOK_APP_ID}
      - FACEBOOK_APP_SECRET=${FACEBOOK_APP_SECRET}
      - LINKEDIN_CLIENT_ID=${LINKEDIN_CLIENT_ID}
      - LINKEDIN_CLIENT_SECRET=${LINKEDIN_CLIENT_SECRET}
      - APPLE_CLIENT_ID=${APPLE_CLIENT_ID}
      - APPLE_TEAM_ID=${APPLE_TEAM_ID}
      - APPLE_KEY_ID=${APPLE_KEY_ID}
      - APPLE_PRIVATE_KEY=${APPLE_PRIVATE_KEY}
      - EMAIL_SERVICE=${EMAIL_SERVICE}
      - EMAIL_USER=${EMAIL_USER}
      - EMAIL_PASS=${EMAIL_PASS}
      - FRONTEND_URL=${FRONTEND_URL}
    depends_on:
      - mongo
    networks:
      - jobboard-network
    restart: unless-stopped
    volumes:
      - ./uploads:/app/backend/uploads
      - ./logs:/app/backend/logs
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  mongo:
    image: mongo:7.0.0
    container_name: jobboard-mongodb-prod
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=jobboard
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
    volumes:
      - mongo-data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
    networks:
      - jobboard-network
    restart: unless-stopped
    command: mongod --auth

  # Redis for caching and session management
  redis:
    image: redis:7-alpine
    container_name: jobboard-redis-prod
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - jobboard-network
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}

  # Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: jobboard-nginx-prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - backend
    networks:
      - jobboard-network
    restart: unless-stopped

volumes:
  mongo-data:
    driver: local
  redis-data:
    driver: local

networks:
  jobboard-network:
    driver: bridge
