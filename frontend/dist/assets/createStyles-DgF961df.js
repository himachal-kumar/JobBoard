import{g as u,s as d,d as m}from"./forms-C2kV68VR.js";const y=(t,s,r)=>{if(t&&"reportValidity"in t){const e=u(r,s);t.setCustomValidity(e&&e.message||""),t.reportValidity()}},v=(t,s)=>{for(const r in s.fields){const e=s.fields[r];e&&e.ref&&"reportValidity"in e.ref?y(e.ref,r,t):e.refs&&e.refs.forEach(f=>y(f,r,t))}},g=(t,s)=>{s.shouldUseNativeValidation&&v(t,s);const r={};for(const e in t){const f=u(s.fields,e),a=Object.assign(t[e]||{},{ref:f&&f.ref});if(V(s.names||Object.keys(t),e)){const i=Object.assign({},u(r,e));d(i,"root",a),d(r,e,i)}else d(r,e,a)}return r},V=(t,s)=>t.some(r=>r.startsWith(s+"."));function j(t,s,r){return s===void 0&&(s={}),r===void 0&&(r={}),function(e,f,a){try{return Promise.resolve(function(i,l){try{var c=(s.context,Promise.resolve(t[r.mode==="sync"?"validateSync":"validate"](e,Object.assign({abortEarly:!1},s,{context:f}))).then(function(n){return a.shouldUseNativeValidation&&v({},a),{values:r.raw?e:n,errors:{}}}))}catch(n){return l(n)}return c&&c.then?c.then(void 0,l):c}(0,function(i){if(!i.inner)throw i;return{values:{},errors:g((l=i,c=!a.shouldUseNativeValidation&&a.criteriaMode==="all",(l.inner||[]).reduce(function(n,o){if(n[o.path]||(n[o.path]={message:o.message,type:o.type}),c){var p=n[o.path].types,h=p&&p[o.type];n[o.path]=m(o.path,c,n,o.type,h?[].concat(h,o.message):o.message)}return n},{})),a)};var l,c}))}catch(i){return Promise.reject(i)}}}function O(t){return t}export{O as c,j as o};
